<?xml version="1.0" ?>
<launch>
  <rosparam command="load" file="$(find franka_ros_controllers)/config/ros_controllers.yaml" ns="/franka_ros_interface"/>
  <arg name="load_gripper" default="true" />
  <arg name="rate" default="1000" />

  <!-- Panda Control Interface -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find franka_description)/robots/panda_arm_hand.urdf.xacro'" if="$(arg load_gripper)" />
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find franka_description)/robots/panda_arm.urdf.xacro'" unless="$(arg load_gripper)" />

  <include file="$(find franka_gripper)/launch/franka_gripper.launch" if="$(arg load_gripper)" ns="/franka_ros_interface">
    <arg name="robot_ip" value="$(env FRANKA_ROBOT_IP)" />
  </include>

  <!-- Start the franka_control_node for advertising controller services and starting custom controller manager-->
  <rosparam command="load" file="$(find franka_interface)/config/robot_config.yaml"/>
  <node name="franka_control" pkg="franka_interface" type="franka_control_node" output="screen" required="true" ns="/franka_ros_interface">
    <!-- <rosparam command="load" file="$(find franka_control)/config/franka_control_node.yaml" /> -->
    <param name="robot_ip" value="$(env FRANKA_ROBOT_IP)" />
    <param name="publish_frequency" value="$(arg rate)"/>
  </node>

  <!-- Start the custom state publisher for franka_ros_interface -->
  <rosparam command="load" file="$(find franka_interface)/config/basic_controllers.yaml" ns="/franka_ros_interface"/>
  <node name="state_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="custom_franka_state_controller" ns="/franka_ros_interface"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
    <param name="publish_frequency" value="$(arg rate)"/>
  </node>
  <!-- Start joint_state_publisher with the joint states of the robot -->
  <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
    <rosparam if="$(arg load_gripper)" param="source_list">[franka_ros_interface/custom_franka_state_controller/joint_states, franka_ros_interface/franka_gripper/joint_states] </rosparam>
    <rosparam unless="$(arg load_gripper)" param="source_list">[franka_ros_interface/custom_franka_state_controller/joint_states] </rosparam>
    <param name="rate" value="$(arg rate)"/>
  </node>
  <node name="joint_state_desired_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
    <rosparam if="$(arg load_gripper)" param="source_list">[franka_ros_interface/custom_franka_state_controller/joint_states_desired, franka_ros_interface/franka_gripper/joint_states] </rosparam>
    <rosparam unless="$(arg load_gripper)" param="source_list">[franka_ros_interface/custom_franka_state_controller/joint_states_desired] </rosparam>
    <param name="rate" value="$(arg rate)"/>
    <remap from="/joint_states" to="/joint_states_desired" />
  </node>

  <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="position_joint_trajectory_controller"/> -->
  <!-- <node name="controllers" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/franka_ros_interface" args=" effort_joint_impedance_controller"/> -->

  <node name="load_controllers" pkg="controller_manager" type="controller_manager" respawn="false"
                                         output="screen" ns="/franka_ros_interface" args="load
                                                                             effort_joint_impedance_controller
                                                                             position_joint_position_controller
                                                                             effort_joint_position_controller
                                                                             effort_joint_torque_controller
                                                                             position_joint_trajectory_controller"/>
  <!-- <node name="joint_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/franka_ros_interface" args="effort_joint_impedance_controller"/> -->
  <!-- position_joint_trajectory_controller -->
<!--   <include file="$(find panda_moveit_config)/launch/move_group.launch">
    <arg name="load_gripper" value="$(arg load_gripper)" />
 </include> -->


</launch>


